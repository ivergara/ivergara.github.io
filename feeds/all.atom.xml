<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>On data, programming, and technology</title><link href="https://ivergara.github.io/" rel="alternate"></link><link href="https://ivergara.github.io/feeds/all.atom.xml" rel="self"></link><id>https://ivergara.github.io/</id><updated>2018-11-06T10:20:00+01:00</updated><entry><title>My “Hacktober” 2018 experience</title><link href="https://ivergara.github.io/hackoctober-2018.html" rel="alternate"></link><published>2018-11-06T10:20:00+01:00</published><updated>2018-11-06T10:20:00+01:00</updated><author><name>Ignacio Vergara Kausel</name></author><id>tag:ivergara.github.io,2018-11-06:/hackoctober-2018.html</id><summary type="html">&lt;p&gt;My first experience contributing during&amp;nbsp;Hacktoberfest.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last year I learned rather late about the hack october activity in the open source world. This year, wasn&amp;#8217;t that different, and I didn&amp;#8217;t manage to plan ahead on how to participate. But this story would be extremely boring if it ended like&amp;nbsp;this.&lt;/p&gt;
&lt;p&gt;By chance, I stumbled upon a little project called &lt;a href="https://github.com/drivendataorg/deon/"&gt;deon&lt;/a&gt; that generates a checklist of good practices for data based workflows. I&amp;#8217;ll not go into depth about it since &lt;a href="http://deon.drivendata.org/"&gt;they&lt;/a&gt; do a great job at explaining at large what their objectives&amp;nbsp;are.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;deon&lt;/code&gt; is little &lt;span class="caps"&gt;CLI&lt;/span&gt; project in &lt;code&gt;python&lt;/code&gt;. And although it is rather simple, in my opinion it is smartly done. Luckily, one of their open &lt;a href="https://github.com/drivendataorg/deon/issues/66"&gt;issues&lt;/a&gt; was to extract all the logic they had placed into the main &lt;span class="caps"&gt;CLI&lt;/span&gt; entrypoint command to its own &amp;#8220;core&amp;#8221; function leaving the &lt;span class="caps"&gt;CLI&lt;/span&gt; as a wrapper around it. Since this project uses &lt;code&gt;click&lt;/code&gt; as a &lt;span class="caps"&gt;CLI&lt;/span&gt; framework and I&amp;#8217;ve been using it to learn how to create and organice nice &lt;span class="caps"&gt;CLI&lt;/span&gt; applications I thought &amp;#8220;hey, this looks like something that can be done quickly!&amp;#8221;. And indeed it was quick, and the &lt;a href="https://github.com/drivendataorg/deon/pull/73"&gt;contribution&lt;/a&gt; was merged&amp;nbsp;promptly. &lt;/p&gt;
&lt;p&gt;Since the changes left the test suite a bit badly organized (in my opinion), I did set to change and clean up the test suite. Repurposing the old tests that were dealing with the &lt;span class="caps"&gt;CLI&lt;/span&gt; directly for the new core, and then creating lightweight &lt;span class="caps"&gt;CLI&lt;/span&gt; testing function. Fortunately they were using &lt;code&gt;pytest&lt;/code&gt; which I realy like and use it exclusively by now in my own work, thus I managed to use some parametrization to reduce lines of code and verbosity.
The &lt;a href="https://github.com/drivendataorg/deon/pull/74"&gt;&lt;span class="caps"&gt;PR&lt;/span&gt;&lt;/a&gt; was recently merged to the master branch and I&amp;#8217;m satisfied with the looks of the test suite, even when there is still room for&amp;nbsp;improvement.&lt;/p&gt;
&lt;p&gt;After this success, I kept looking into the open issues. The second one I found that was more on the technical side is related to offer the creation of checklists via a &lt;a href="https://github.com/drivendataorg/deon/issues/33"&gt;web application&lt;/a&gt;. Someone already had commented showing interest in implementing it, but that was more than a month earlier and there was no movement in his forked repository. Thus, I decided to start tackling it. Once again, using what I&amp;#8217;ve been experimenting with, chose &lt;code&gt;flask&lt;/code&gt; to implement a web application with a single endpoint. For now the basic skeleton of &lt;a href="https://github.com/ivergara/deon/pull/1"&gt;my suggested solution&lt;/a&gt; is more or less complete and further development would need feedback from the project&amp;nbsp;owners/maintainers.&lt;/p&gt;
&lt;p&gt;So, in the end, and without forcing it, I ended contributing a tiny bit into an open source project during October. It does even mark my first contribution in code as previously I&amp;#8217;ve &lt;a href="https://github.com/pandas-dev/pandas/pull/21496"&gt;contributed&lt;/a&gt; with some cleaning and docummenting of the test suite in &lt;code&gt;pandas&lt;/code&gt; (which I hope to continue at some point). Moreover, I did contribute by using directly what what I&amp;#8217;ve been learning since transitioning to being a full time software&amp;nbsp;developer.&lt;/p&gt;</content><category term="open source"></category></entry><entry><title>What I’ve learned so far - my first six months</title><link href="https://ivergara.github.io/what-ive-learned-so-far-my-first-six-months.html" rel="alternate"></link><published>2017-12-30T16:20:00+01:00</published><updated>2017-12-30T16:20:00+01:00</updated><author><name>Ignacio Vergara Kausel</name></author><id>tag:ivergara.github.io,2017-12-30:/what-ive-learned-so-far-my-first-six-months.html</id><summary type="html">&lt;p&gt;A list of a bunch of stuff that I&amp;#8217;ve learned during my first six months working at&amp;nbsp;Odoscope.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Soon I&amp;#8217;ll complete my first six months of working as a software developer. Here in Germany, that coincides with the legal trial period. Luckily, the transition from academia to my current job has been extremely smooth, due to a relaxed working atmosphere and particularly due a very scientifically oriented first task. Implementing an evolutionary strategy optimization procedure is something that is very much in the realm of possible Bachelor/Master thesis or a segment of a doctoral work for a&amp;nbsp;physicist.&lt;/p&gt;
&lt;p&gt;Overall, these first six months have been a good learning experience. Most of what I&amp;#8217;ve had to learn can be categorized as &amp;#8220;software engineering&amp;#8217;, like dealing with logs, reliance, deployment, and&amp;nbsp;testing.&lt;/p&gt;
&lt;p&gt;I want to take the opportunity to list and comment a bit on the things I&amp;#8217;ve learned, explored, and played with during this time. Implicitly in this list, is the fact that most of it applies in the context of Python since it&amp;#8217;s the programming language that I know the best&amp;#8230; and since part of my job is rather borderline with data science/analytics, having Pandas available has been a very&amp;nbsp;good.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cassandra&amp;nbsp;basics&lt;/li&gt;
&lt;li&gt;Jenkins base pipeline &lt;span class="caps"&gt;CI&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;HTTP&lt;/span&gt; requests, including asynchronous&amp;nbsp;ones&lt;/li&gt;
&lt;li&gt;Using&amp;nbsp;decorators&lt;/li&gt;
&lt;li&gt;Do better&amp;nbsp;logging&lt;/li&gt;
&lt;li&gt;Type and function annotations in&amp;nbsp;Python&lt;/li&gt;
&lt;li&gt;Build a custom factory for Cassandra that returns a pandas &lt;code&gt;DataFrame&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Some extensive use of &lt;code&gt;pytest&lt;/code&gt; including parametrization, fixtures,&amp;nbsp;mocking&lt;/li&gt;
&lt;li&gt;Selenium basics as a proof of concept to do end-to-end testing of our&amp;nbsp;dashboard&lt;/li&gt;
&lt;li&gt;Using&amp;nbsp;Docker&lt;/li&gt;
&lt;li&gt;Play with binary file formats (&lt;code&gt;arrow&lt;/code&gt;, &lt;code&gt;parquet&lt;/code&gt;) sending them over a&amp;nbsp;network&lt;/li&gt;
&lt;li&gt;Handling config files using &lt;code&gt;ConfigParser&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use click to create a &lt;span class="caps"&gt;CLI&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Built a &lt;code&gt;Flask&lt;/code&gt; app&lt;/li&gt;
&lt;li&gt;Appreciate Pycharm&amp;#8217;s&amp;nbsp;debugger&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most likely I&amp;#8217;ve forgotten some minor things, but this is the bulk of it. In the future, I&amp;#8217;ll try to write about some noteworthy elements of this list. Particularly the Flask based access to the cassandra database that returns a pandas dataframe as a parquet file, arrow stream, or pretty rendered &lt;span class="caps"&gt;HTML&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Going forwards, I&amp;#8217;m highly interested in exploring how to improve testing with the &lt;code&gt;hypothesis&lt;/code&gt; library, but still need to find a good case use for it. Also, want to explore the field of statistical programming using &lt;code&gt;pymc3&lt;/code&gt;. Beyond that, hopefully I&amp;#8217;ll start doing some stuff in Go&amp;nbsp;soon.&lt;/p&gt;</content></entry><entry><title>My First Post</title><link href="https://ivergara.github.io/my-first-post.html" rel="alternate"></link><published>2017-10-30T16:20:00+01:00</published><updated>2017-10-30T16:20:00+01:00</updated><author><name>Ignacio Vergara Kausel</name></author><id>tag:ivergara.github.io,2017-10-30:/my-first-post.html</id><summary type="html">&lt;p&gt;Kickstarting of the&amp;nbsp;blog.&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few months ago I left academia, working as a research physicist (experimental condensed matter) and started working as a software&amp;nbsp;developer. &lt;/p&gt;
&lt;p&gt;Here I&amp;#8217;d want to expose some discoveries, ideas, projects, and anything else related to computing. Mostly it&amp;#8217;ll be based on python, but it might feature some other languages once I get to explore them. Otherwise, every now and then I&amp;#8217;ll try to feature some science or math oriented stuff and maybe some technology&amp;nbsp;rants.&lt;/p&gt;
&lt;p&gt;Hope to be able to produce somewhat regular&amp;nbsp;content.&lt;/p&gt;</content></entry></feed>